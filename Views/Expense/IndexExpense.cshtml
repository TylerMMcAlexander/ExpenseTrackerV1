@model IEnumerable<Expense>
<h2>List of Expenses</h2>

@if (TempData["Notification"] != null)
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        @TempData["Notification"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}


<a asp-action="AddExpense" asp-controller="Expense" class="btn btn-primary">Add Expense</a>
<form method="get" asp-action="IndexExpense" asp-controller="Expense">
    <div class="form-row">
        <div class="form-group col-md-2">
            <label for="isRecurringFilter">Recurring</label>
            <input type="checkbox" name="isRecurringFilter" id="isRecurringFilter"
                value="true" @(ViewData["isRecurringFilter"] as bool? == true ? "checked" : "") />
        </div>
        <div class="form-group col-md-3">
            <label for="startDate">Start Date</label>
            <input type="date" name="startDate" id="startDate" 
                class="form-control" value="@ViewData["startDate"] as string" />
        </div>
        <div class="form-group col-md-3">
            <label for="endDate">End Date</label>
            <input type="date" name="endDate" id="endDate"
                class="form-control" value="@ViewData["endDate"] as string" />
        </div>
    </div>
    <input type="hidden" name="sortOrder" value="@ViewData["SortOrder"]" />
    <button type="submit" class="btn btn-primary">Apply Filters</button>
</form>

<table class="table-striped">
    <thead>
        <tr>
            <th>Expense Amount
                <a asp-action="IndexExpense" asp-route-sortOrder="amount_asc"
                   asp-route-isRecurringFilter="@ViewData["IsRecurringFilter"]">&#x2191;</a>
                <a asp-action="IndexExpense" asp-route-sortOrder="amount_desc"
                   asp-route-isRecurringFilter="@ViewData["IsRecurringFilter"]">&#x2193;</a>
            </th>
            <th>Expense Category
                <a asp-action="IndexExpense" asp-route-sortOrder="category_asc"
                   asp-route-isRecurringFilter="@ViewData["IsRecurringFilter"]">&#x2191;</a>
                <a asp-action="IndexExpense" asp-route-sortOrder="category_desc"
                   asp-route-isRecurringFilter="@ViewData["IsRecurringFilter"]">&#x2193;</a>
            </th>
            <th>Expense Date
                <a asp-action="IndexExpense" asp-route-sortOrder="date_asc"
                   asp-route-isRecurringFilter="@ViewData["IsRecurringFilter"]">&#x2191;</a>
                <a asp-action="IndexExpense" asp-route-sortOrder="date_desc"
                   asp-route-isRecurringFilter="@ViewData["IsRecurringFilter"]">&#x2193;</a>
            </th>
            <th>Is Recurring</th>
            <th>Max Budget</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach(var expense in Model)
        {
         <tr>
             <td>@expense.Amount.ToString("C2")</td>
             <td>@expense.Category.CategoryName</td>
             <td>@expense.ExpenseDate.ToShortDateString()</td>
             <td>
                 <input type="checkbox" @(expense.IsRecurring ? "checked" : "") disabled />
             </td>
             <td>@expense.Category.MaxBudget.ToString("C2")</td>
                <td>
                    <a asp-action="EditExpense" asp-controller="Expense" asp-route-id="@expense.ExpenseId">Edit Expense</a>
                    <a asp-action="DeleteExpense" asp-controller="Expense" asp-route-id="@expense.ExpenseId">Delete Expense</a>
                </td>
         </tr>
        }
    </tbody>
</table>



<h3>Expenses By Category</h3>
<div class="chart-container" style="position: relative; height:40vh; width:80vw">
<canvas id="expensesByCategoryChart"></canvas>
</div>

<script>
    const expenseData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewData["ExpenseByCategory"]));

    const categories = expenseData.map(e => e.CategoryName);
    const amounts = expenseData.map(e => e.TotalAmount);

    const ctx = document.getElementById('expensesByCategoryChart').getContext('2d');
    new Chart(ctx, {
        type: 'pie',
        data: {
            labels: categories,
            datasets: [{
                label: 'Expenses by Category',
                data: amounts,
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: true
            }]
        },
        options: { responsive: true }
    });
</script>